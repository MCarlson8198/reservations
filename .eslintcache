[{"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/url/constants.js":"1","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/PartySize.jsx":"2","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/actions/index.js":"3","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/reducers.js":"4","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/actions.js":"5","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/types.js":"6","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/middleware.js":"7","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/App.js":"8","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/ReservationTime.jsx":"9","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/store.js":"10","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/GuestDetails.jsx":"11","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/index.js":"12","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/Reservations.jsx":"13","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/ReservationDetails.jsx":"14","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/reducers/rootReducer.js":"15"},{"size":248,"mtime":1606525074649,"results":"16","hashOfConfig":"17"},{"size":951,"mtime":1606528162609,"results":"18","hashOfConfig":"17"},{"size":347,"mtime":1606521490228,"results":"19","hashOfConfig":"17"},{"size":3199,"mtime":1606595617814,"results":"20","hashOfConfig":"17"},{"size":1358,"mtime":1606595451122,"results":"21","hashOfConfig":"17"},{"size":475,"mtime":1606595460917,"results":"22","hashOfConfig":"17"},{"size":3047,"mtime":1606593450498,"results":"23","hashOfConfig":"17"},{"size":1075,"mtime":1606528197546,"results":"24","hashOfConfig":"17"},{"size":1266,"mtime":1606584400219,"results":"25","hashOfConfig":"17"},{"size":588,"mtime":1606520686413,"results":"26","hashOfConfig":"17"},{"size":1880,"mtime":1606538492877,"results":"27","hashOfConfig":"17"},{"size":773,"mtime":1606520873190,"results":"28","hashOfConfig":"17"},{"size":1441,"mtime":1606595505872,"results":"29","hashOfConfig":"17"},{"size":1141,"mtime":1606596050555,"results":"30","hashOfConfig":"17"},{"size":314,"mtime":1606521460443,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"owuzcz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/url/constants.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/PartySize.jsx",[],["66","67"],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/actions/index.js",[],["68","69"],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/reducers.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/actions.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/types.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/middleware.js",["70","71","72","73","74"],"import { SET_RESERVATION_TIME, SET_NEW_RESERVATION, SET_CURRENT_RESERVATIONS } from './types';\nimport { setReservationTimes, setCurrentReservations, setTimeAvailability } from './actions';\nimport {List} from 'immutable';\nimport moment from 'moment'\n\nfunction getStartTime (hour, minutes) {\n  const d = new Date()\n  d.setHours(hour)\n  d.setMinutes(minutes)\n  return d\n}\n\nfunction getEndTime (hour, minutes) {\n  const d = new Date()\n  if (minutes >= 15) {\n    d.setHours(hour + 1)\n    d.setMinutes(minutes - 15)\n  } else {\n    d.setMinutes(minutes - 15)\n    d.setHours(hour)\n  }\n  return d\n}\n\nfunction setReservationTimeSlots (hour, minutes, store) {\n  const { reservations } = store.getState()\n  const schedule = reservations.get('timeArr')\n  const d = new Date()\n  d.setHours(hour)\n  const time1 = moment(d.setMinutes(minutes)).format('HH:mm')\n  const time2 = moment(d.setMinutes(minutes)).add(15, 'minutes').format('HH:mm')\n  const time3 = moment(d.setMinutes(minutes)).add(30, 'minutes').format('HH:mm')\n  const time4 = moment(d.setMinutes(minutes)).add(45, 'minutes').format('HH:mm')\n  const reservedTimes = [time1, time2, time3, time4]\n  const reservedTimesClean = []\n  reservedTimes.map((el) => {\n    const newArr = el.split('')\n      if (newArr[0] === '0'){\n        newArr.shift()\n        reservedTimesClean.push(newArr.join(''))\n      } else {\n        reservedTimesClean.push(el)\n      }\n      \n  })\n  const workingTime = reservedTimesClean[0]\n  \n  schedule.map((el) => {\n    reservedTimesClean.map((item) => {\n      if (el.time === item) {\n        console.log(true, item)\n        console.log('el', schedule.indexOf(el))\n        const elementIndex = schedule.indexOf(el)\n        store.dispatch(setTimeAvailability(elementIndex, false))\n      }\n    })\n  })\n  \n  \n}\n\nfunction reserveFullHour ({store, action}) {\n  const initialTime = action.payload.time\n  const time = initialTime.split(':');\n  const hour = parseInt(time[0])\n  const minutes = parseInt(time[1])\n  const startReservationTime = getStartTime(hour, minutes)\n  const endReservationTime = getEndTime(hour, minutes)\n  \n  store.dispatch(setReservationTimes({\n    startReservationTime: startReservationTime,\n    endReservationTime: endReservationTime,\n  }))\n\n  setReservationTimeSlots(hour, minutes, store)\n}\n\nfunction addReservationToList({store, action}) {\n  let updatedReservations = []\n  const {reservations} = store.getState()\n  const newRes = List(reservations.get('currentReservations'))\n  newRes.map(item => {\n    return updatedReservations.push(item)\n  })\n  updatedReservations.splice(newRes.size, 1, action.payload)\n  store.dispatch(setCurrentReservations(updatedReservations))\n}\n\nexport default function newMiddleware (store) {\n  return next => (action) => {\n    const { type } = action\n    \n    switch (type) {\n      case SET_RESERVATION_TIME:\n        reserveFullHour({store, action})\n        break\n      case SET_NEW_RESERVATION:\n        addReservationToList({store, action})\n        break\n      default:\n        // Do nothing.\n        break\n    }\n    next(action)\n  }\n}\n","/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/App.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/ReservationTime.jsx",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/store.js",[],["75","76"],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/GuestDetails.jsx",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/index.js",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/Reservations.jsx",[],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/components/ReservationDetails.jsx",["77","78"],"/Users/mcarlson/Desktop/MattGaia/ReactPractice/reservations/src/redux/reducers/rootReducer.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":53,"nodeType":"87","messageId":"88","endLine":1,"endColumn":77},{"ruleId":"89","severity":1,"message":"90","line":36,"column":26,"nodeType":"91","messageId":"92","endLine":36,"endColumn":28},{"ruleId":"85","severity":1,"message":"93","line":46,"column":9,"nodeType":"87","messageId":"88","endLine":46,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":48,"column":21,"nodeType":"91","messageId":"92","endLine":48,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":49,"column":35,"nodeType":"91","messageId":"92","endLine":49,"endColumn":37},{"ruleId":"79","replacedBy":"94"},{"ruleId":"81","replacedBy":"95"},{"ruleId":"85","severity":1,"message":"96","line":8,"column":28,"nodeType":"87","messageId":"88","endLine":8,"endColumn":37},{"ruleId":"85","severity":1,"message":"97","line":8,"column":39,"nodeType":"87","messageId":"88","endLine":8,"endColumn":46},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"no-unused-vars","'SET_CURRENT_RESERVATIONS' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'workingTime' is assigned a value but never used.",["98"],["99"],"'startTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]